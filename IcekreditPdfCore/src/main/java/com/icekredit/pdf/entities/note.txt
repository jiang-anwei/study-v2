属性margin和属性padding必须逐步运用，borderwidth对有效空间的计算也必须注意

总空间position
margin：margin
padding：padding

首先是cell的宽度，应该是position.getLeft() + margin 到position.getRight() - margin
其次是可用空间的宽度为：position.getLeft() + margin + padding 到position.getRight() - margin - padding
最后为了简化border的计算：暂且把border算到padding中，即border消耗掉一部分的padding空间

注意，先计算cell的宽度，再计算可用空间的宽度，二者不是一个东西，差着两个padding以及两个borderWidth



关于最底层，cellchartConfig中属性值使用Json进行存储的几点说明：
1）这一切源于一个糟糕的失败的设计，此设计的初衷是模仿实现js中按需的属性配置（我提供一整套的默认值，需要指定值的属性再来单独配置），我本以为这样能够让我摆脱一些构造函数需要十几个甚至几十个参数的情况，但是失败了，在java中没必要这么麻烦，这么实现达不到预期的效果
2）系统写到很后面的是时候我才意识到上述问题，此时已来不及立即做出调整，不过由于在Json的表面上我提供了所有属性的Getter以及Setter所以使用起来其实忽然普通的java bean属性调用方式是一样的。